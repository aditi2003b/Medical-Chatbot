name: CI/CD Pipeline for FastAPI

on:
  push:
    branches:
      - main  # Trigger workflow on push to the 'main' branch
  pull_request:
    branches:
      - main  # Trigger workflow on pull request targeting 'main' branch

jobs:
  # Job for building the Docker container and testing
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Python environment
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t medical-chatbot .

      # Step 5: Run tests (optional, add your tests if available)
      - name: Run tests
        run: |
          # You can add your tests here, for example:
          # pytest tests/
          echo "No tests defined."

  # Job for deploying the application (this can be modified depending on your cloud provider)
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Log in to DockerHub (or any other registry you're using)
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/medical-chatbot:latest .

      # Step 4: Push the Docker image to DockerHub (or your registry)
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/medical-chatbot:latest

      # Step 5: Deploy to your server (Modify based on your hosting solution)
      - name: Deploy to Server
        run: |
          # Add deployment steps here. For example:
          # SSH into your server and pull the image
          # ssh user@server "docker pull ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest && docker run -d -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest"
          echo "Deploying to the server..."

